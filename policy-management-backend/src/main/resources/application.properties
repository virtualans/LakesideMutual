insuranceQuoteRequestEvent.queueName=insurance-quote-request-event-queue
customerDecisionEvent.queueName=customer-decision-event-queue
insuranceQuoteResponseEvent.queueName=insurance-quote-response-event-queue
insuranceQuoteExpiredEvent.queueName=insurance-quote-expired-event-queue
policyCreatedEvent.queueName=policy-created-event-queue

apikey.header=Authorization
# API keys should not be hardcoded in a real application but injected by the
# container or managed in a data store. We provide it here for convenience:
apikey.value=999ab497f8ec1052

spring.application.name = policy-management-backend

spring.jackson.serialization.INDENT_OUTPUT=true
spring.jackson.default-property-inclusion=NON_NULL

spring.datasource.url =  jdbc:mysql://localhost:3306/policymanagement?useSSL=false
spring.datasource.username = demo_user
spring.datasource.password = demo_password
spring.datasource.driverClassName = com.mysql.cj.jdbc.Driver
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect


spring.jpa.show-sql=false

spring.jpa.hibernate.ddl-auto=create-drop

# spring.jpa.hibernate.ddl-auto=update

server.port = 8090

management.endpoints.web.exposure.include=*
management.info.git.mode=full

# ActiveMQ settings
policymanagement.stompBrokerBindAddress=stomp://0.0.0.0:61613
policymanagement.tcpBrokerBindAddress=tcp://0.0.0.0:61616
riskmanagement.queueName=newpolicies
spring.activemq.user=queueuser
spring.activemq.password=secret
